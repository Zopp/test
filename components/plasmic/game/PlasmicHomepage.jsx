/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3XwD8wCAoqPrGWTGpVKhwr
// Component: q2Dbp2E31ItQ
import * as React from "react";
import Head from "next/head";
import { useRouter } from "next/router";
import {
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  useCurrentUser
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import * as plasmicAuth from "@plasmicapp/react-web/lib/auth";
import { usePlasmicDataSourceContext } from "@plasmicapp/data-sources-context";
import CardGame from "../../CardGame"; // plasmic-import: C9UhLP6S6jRb/component
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 3XwD8wCAoqPrGWTGpVKhwr/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: q2Dbp2E31ItQ/css
import Rocket1Icon from "./icons/PlasmicIcon__Rocket1"; // plasmic-import: kBVL3_3vP3PL/icon
import GalleryHorizontalEnd1Icon from "./icons/PlasmicIcon__GalleryHorizontalEnd1"; // plasmic-import: HpOfyYJi2Ofz/icon
import LayoutList1Icon from "./icons/PlasmicIcon__LayoutList1"; // plasmic-import: nZEB40zHdKIj/icon
import Workflow1Icon from "./icons/PlasmicIcon__Workflow1"; // plasmic-import: it6lXyUD9f_g/icon
import Line8Icon from "./icons/PlasmicIcon__Line8"; // plasmic-import: XJvrBeUsfp7D/icon
import ChevronDownIcon from "./icons/PlasmicIcon__ChevronDown"; // plasmic-import: jGee_WdWnBfT/icon
import GIcon from "./icons/PlasmicIcon__G"; // plasmic-import: -Hbx0ldwMGfX/icon
import Line13Icon from "./icons/PlasmicIcon__Line13"; // plasmic-import: WwpwYa9X5Cpp/icon
import SearchIcon from "./icons/PlasmicIcon__Search"; // plasmic-import: td3CWbdk2bS1/icon
import Bookmark11Icon from "./icons/PlasmicIcon__Bookmark11"; // plasmic-import: LBXCyLpxoVii/icon

createPlasmicElementProxy;

export const PlasmicHomepage__VariantProps = new Array();

export const PlasmicHomepage__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = useCurrentUser?.() || {};
  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"gameFront"}
            data-plasmic-override={overrides.gameFront}
            className={classNames(projectcss.all, sty.gameFront)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__gD5Xd
              )}
            >
              {"Explore"}
            </div>
            <Stack__
              as={"div"}
              data-plasmic-name={"row"}
              data-plasmic-override={overrides.row}
              hasGap={true}
              className={classNames(projectcss.all, sty.row)}
            >
              <CardGame
                className={classNames("__wab_instance", sty.cardGame__p8SNh)}
              />

              <CardGame
                className={classNames("__wab_instance", sty.cardGame__vJwiq)}
              />

              <CardGame
                className={classNames("__wab_instance", sty.cardGame__abkoG)}
              />

              <CardGame
                className={classNames("__wab_instance", sty.cardGame__xbjZz)}
              />

              <CardGame
                className={classNames("__wab_instance", sty.cardGame__qsqFz)}
              />

              <CardGame
                className={classNames("__wab_instance", sty.cardGame__vPtBa)}
              />
            </Stack__>
            <Stack__
              as={"div"}
              data-plasmic-name={"menuTab"}
              data-plasmic-override={overrides.menuTab}
              hasGap={true}
              className={classNames(projectcss.all, sty.menuTab)}
            >
              <div
                data-plasmic-name={"frame78"}
                data-plasmic-override={overrides.frame78}
                className={classNames(projectcss.all, sty.frame78)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame66"}
                  data-plasmic-override={overrides.frame66}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame66)}
                >
                  <Rocket1Icon
                    className={classNames(projectcss.all, sty.svg__cOhDi)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__xRWk
                    )}
                  >
                    {"Game"}
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"text9"}
                  data-plasmic-override={overrides.text9}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.text9)}
                >
                  <GalleryHorizontalEnd1Icon
                    className={classNames(projectcss.all, sty.svg__cEAiu)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___6Rw03
                    )}
                  >
                    {"Screen"}
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"text10"}
                  data-plasmic-override={overrides.text10}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.text10)}
                >
                  <LayoutList1Icon
                    className={classNames(projectcss.all, sty.svg__pBIdw)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ya5N
                    )}
                  >
                    {"UI Elements"}
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame67"}
                  data-plasmic-override={overrides.frame67}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame67)}
                >
                  <Workflow1Icon
                    className={classNames(projectcss.all, sty.svg__gf0I)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___7Um6Y
                    )}
                  >
                    {"Flow"}
                  </div>
                </Stack__>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__xx2GC)}>
                <Line8Icon
                  className={classNames(projectcss.all, sty.svg__ybBn)}
                  role={"img"}
                />
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              data-plasmic-name={"frame39"}
              data-plasmic-override={overrides.frame39}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame39)}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"filterBtn"}
                data-plasmic-override={overrides.filterBtn}
                hasGap={true}
                className={classNames(projectcss.all, sty.filterBtn)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"text11"}
                  data-plasmic-override={overrides.text11}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.text11)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zinMg
                    )}
                  >
                    {"Genres"}
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"icon"}
                  data-plasmic-override={overrides.icon}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.icon)}
                >
                  <ChevronDownIcon
                    className={classNames(projectcss.all, sty.svg__n9EQy)}
                    role={"img"}
                  />
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                data-plasmic-name={"filterBtn2"}
                data-plasmic-override={overrides.filterBtn2}
                hasGap={true}
                className={classNames(projectcss.all, sty.filterBtn2)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"text12"}
                  data-plasmic-override={overrides.text12}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.text12)}
                >
                  <div
                    data-plasmic-name={"genres"}
                    data-plasmic-override={overrides.genres}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.genres
                    )}
                  >
                    {"Game mode"}
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"icon2"}
                  data-plasmic-override={overrides.icon2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.icon2)}
                >
                  <ChevronDownIcon
                    className={classNames(projectcss.all, sty.svg__apZce)}
                    role={"img"}
                  />
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                data-plasmic-name={"filterBtn3"}
                data-plasmic-override={overrides.filterBtn3}
                hasGap={true}
                className={classNames(projectcss.all, sty.filterBtn3)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"text13"}
                  data-plasmic-override={overrides.text13}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.text13)}
                >
                  <div
                    data-plasmic-name={"genres2"}
                    data-plasmic-override={overrides.genres2}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.genres2
                    )}
                  >
                    {"Camera"}
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"icon3"}
                  data-plasmic-override={overrides.icon3}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.icon3)}
                >
                  <ChevronDownIcon
                    className={classNames(projectcss.all, sty.svg__hrdiY)}
                    role={"img"}
                  />
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                data-plasmic-name={"filterBtn4"}
                data-plasmic-override={overrides.filterBtn4}
                hasGap={true}
                className={classNames(projectcss.all, sty.filterBtn4)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"text14"}
                  data-plasmic-override={overrides.text14}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.text14)}
                >
                  <div
                    data-plasmic-name={"genres3"}
                    data-plasmic-override={overrides.genres3}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.genres3
                    )}
                  >
                    {"Theme"}
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"icon4"}
                  data-plasmic-override={overrides.icon4}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.icon4)}
                >
                  <ChevronDownIcon
                    className={classNames(projectcss.all, sty.svg__vOAxa)}
                    role={"img"}
                  />
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                data-plasmic-name={"filterBtn5"}
                data-plasmic-override={overrides.filterBtn5}
                hasGap={true}
                className={classNames(projectcss.all, sty.filterBtn5)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"text15"}
                  data-plasmic-override={overrides.text15}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.text15)}
                >
                  <div
                    data-plasmic-name={"genres4"}
                    data-plasmic-override={overrides.genres4}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.genres4
                    )}
                  >
                    {"Orientation"}
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"icon5"}
                  data-plasmic-override={overrides.icon5}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.icon5)}
                >
                  <ChevronDownIcon
                    className={classNames(projectcss.all, sty.svg__a01Zh)}
                    role={"img"}
                  />
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                data-plasmic-name={"filterBtn6"}
                data-plasmic-override={overrides.filterBtn6}
                hasGap={true}
                className={classNames(projectcss.all, sty.filterBtn6)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"text16"}
                  data-plasmic-override={overrides.text16}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.text16)}
                >
                  <div
                    data-plasmic-name={"genres5"}
                    data-plasmic-override={overrides.genres5}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.genres5
                    )}
                  >
                    {"Style"}
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"icon6"}
                  data-plasmic-override={overrides.icon6}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.icon6)}
                >
                  <ChevronDownIcon
                    className={classNames(projectcss.all, sty.svg__rbEuT)}
                    role={"img"}
                  />
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                data-plasmic-name={"filterBtn7"}
                data-plasmic-override={overrides.filterBtn7}
                hasGap={true}
                className={classNames(projectcss.all, sty.filterBtn7)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"text17"}
                  data-plasmic-override={overrides.text17}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.text17)}
                >
                  <div
                    data-plasmic-name={"genres6"}
                    data-plasmic-override={overrides.genres6}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.genres6
                    )}
                  >
                    {"Monetization"}
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"icon7"}
                  data-plasmic-override={overrides.icon7}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.icon7)}
                >
                  <ChevronDownIcon
                    className={classNames(projectcss.all, sty.svg__b3GwK)}
                    role={"img"}
                  />
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                data-plasmic-name={"filterBtn8"}
                data-plasmic-override={overrides.filterBtn8}
                hasGap={true}
                className={classNames(projectcss.all, sty.filterBtn8)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"text18"}
                  data-plasmic-override={overrides.text18}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.text18)}
                >
                  <div
                    data-plasmic-name={"genres7"}
                    data-plasmic-override={overrides.genres7}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.genres7
                    )}
                  >
                    {"Studio"}
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"icon8"}
                  data-plasmic-override={overrides.icon8}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.icon8)}
                >
                  <ChevronDownIcon
                    className={classNames(projectcss.all, sty.svg___58VFh)}
                    role={"img"}
                  />
                </Stack__>
              </Stack__>
            </Stack__>
            <div
              data-plasmic-name={"header"}
              data-plasmic-override={overrides.header}
              className={classNames(projectcss.all, sty.header)}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"frame146"}
                data-plasmic-override={overrides.frame146}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame146)}
              >
                <GIcon
                  className={classNames(projectcss.all, sty.svg__ibIDh)}
                  role={"img"}
                />

                <div className={classNames(projectcss.all, sty.freeBox__d9Be)}>
                  <Line13Icon
                    className={classNames(projectcss.all, sty.svg__z89Sd)}
                    role={"img"}
                  />
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___0Djr
                  )}
                >
                  {"iPhone"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___2OYkw
                  )}
                >
                  {"Android"}
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                data-plasmic-name={"search"}
                data-plasmic-override={overrides.search}
                hasGap={true}
                className={classNames(projectcss.all, sty.search)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"icon9"}
                  data-plasmic-override={overrides.icon9}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.icon9)}
                >
                  <SearchIcon
                    className={classNames(projectcss.all, sty.svg__xh7GE)}
                    role={"img"}
                  />
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"text19"}
                  data-plasmic-override={overrides.text19}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.text19)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__q2Ql
                    )}
                  >
                    {"Search"}
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                data-plasmic-name={"frame79"}
                data-plasmic-override={overrides.frame79}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame79)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"buttons"}
                  data-plasmic-override={overrides.buttons}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.buttons)}
                >
                  <Bookmark11Icon
                    className={classNames(projectcss.all, sty.svg__uUol6)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__n7HiS
                    )}
                  >
                    {"Collections"}
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"buttons2"}
                  data-plasmic-override={overrides.buttons2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.buttons2)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"text20"}
                    data-plasmic-override={overrides.text20}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.text20)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__hxmGp
                      )}
                    >
                      {"Get Pro"}
                    </div>
                  </Stack__>
                </Stack__>
                <div
                  data-plasmic-name={"avatar"}
                  data-plasmic-override={overrides.avatar}
                  className={classNames(projectcss.all, sty.avatar)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___5N6B
                    )}
                  >
                    {"CN"}
                  </div>
                </div>
              </Stack__>
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "gameFront",
    "row",
    "menuTab",
    "frame78",
    "frame66",
    "text9",
    "text10",
    "frame67",
    "frame39",
    "filterBtn",
    "text11",
    "icon",
    "filterBtn2",
    "text12",
    "genres",
    "icon2",
    "filterBtn3",
    "text13",
    "genres2",
    "icon3",
    "filterBtn4",
    "text14",
    "genres3",
    "icon4",
    "filterBtn5",
    "text15",
    "genres4",
    "icon5",
    "filterBtn6",
    "text16",
    "genres5",
    "icon6",
    "filterBtn7",
    "text17",
    "genres6",
    "icon7",
    "filterBtn8",
    "text18",
    "genres7",
    "icon8",
    "header",
    "frame146",
    "search",
    "icon9",
    "text19",
    "frame79",
    "buttons",
    "buttons2",
    "text20",
    "avatar"
  ],

  gameFront: [
    "gameFront",
    "row",
    "menuTab",
    "frame78",
    "frame66",
    "text9",
    "text10",
    "frame67",
    "frame39",
    "filterBtn",
    "text11",
    "icon",
    "filterBtn2",
    "text12",
    "genres",
    "icon2",
    "filterBtn3",
    "text13",
    "genres2",
    "icon3",
    "filterBtn4",
    "text14",
    "genres3",
    "icon4",
    "filterBtn5",
    "text15",
    "genres4",
    "icon5",
    "filterBtn6",
    "text16",
    "genres5",
    "icon6",
    "filterBtn7",
    "text17",
    "genres6",
    "icon7",
    "filterBtn8",
    "text18",
    "genres7",
    "icon8",
    "header",
    "frame146",
    "search",
    "icon9",
    "text19",
    "frame79",
    "buttons",
    "buttons2",
    "text20",
    "avatar"
  ],

  row: ["row"],
  menuTab: ["menuTab", "frame78", "frame66", "text9", "text10", "frame67"],
  frame78: ["frame78", "frame66", "text9", "text10", "frame67"],
  frame66: ["frame66"],
  text9: ["text9"],
  text10: ["text10"],
  frame67: ["frame67"],
  frame39: [
    "frame39",
    "filterBtn",
    "text11",
    "icon",
    "filterBtn2",
    "text12",
    "genres",
    "icon2",
    "filterBtn3",
    "text13",
    "genres2",
    "icon3",
    "filterBtn4",
    "text14",
    "genres3",
    "icon4",
    "filterBtn5",
    "text15",
    "genres4",
    "icon5",
    "filterBtn6",
    "text16",
    "genres5",
    "icon6",
    "filterBtn7",
    "text17",
    "genres6",
    "icon7",
    "filterBtn8",
    "text18",
    "genres7",
    "icon8"
  ],

  filterBtn: ["filterBtn", "text11", "icon"],
  text11: ["text11"],
  icon: ["icon"],
  filterBtn2: ["filterBtn2", "text12", "genres", "icon2"],
  text12: ["text12", "genres"],
  genres: ["genres"],
  icon2: ["icon2"],
  filterBtn3: ["filterBtn3", "text13", "genres2", "icon3"],
  text13: ["text13", "genres2"],
  genres2: ["genres2"],
  icon3: ["icon3"],
  filterBtn4: ["filterBtn4", "text14", "genres3", "icon4"],
  text14: ["text14", "genres3"],
  genres3: ["genres3"],
  icon4: ["icon4"],
  filterBtn5: ["filterBtn5", "text15", "genres4", "icon5"],
  text15: ["text15", "genres4"],
  genres4: ["genres4"],
  icon5: ["icon5"],
  filterBtn6: ["filterBtn6", "text16", "genres5", "icon6"],
  text16: ["text16", "genres5"],
  genres5: ["genres5"],
  icon6: ["icon6"],
  filterBtn7: ["filterBtn7", "text17", "genres6", "icon7"],
  text17: ["text17", "genres6"],
  genres6: ["genres6"],
  icon7: ["icon7"],
  filterBtn8: ["filterBtn8", "text18", "genres7", "icon8"],
  text18: ["text18", "genres7"],
  genres7: ["genres7"],
  icon8: ["icon8"],
  header: [
    "header",
    "frame146",
    "search",
    "icon9",
    "text19",
    "frame79",
    "buttons",
    "buttons2",
    "text20",
    "avatar"
  ],

  frame146: ["frame146"],
  search: ["search", "icon9", "text19"],
  icon9: ["icon9"],
  text19: ["text19"],
  frame79: ["frame79", "buttons", "buttons2", "text20", "avatar"],
  buttons: ["buttons"],
  buttons2: ["buttons2", "text20"],
  text20: ["text20"],
  avatar: ["avatar"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

function withUsePlasmicAuth(WrappedComponent) {
  const WithUsePlasmicAuthComponent = props => {
    const dataSourceCtx = usePlasmicDataSourceContext() ?? {};
    const { isUserLoading, user, token } = plasmicAuth.usePlasmicAuth({
      appId: "3XwD8wCAoqPrGWTGpVKhwr"
    });
    return (
      <PlasmicDataSourceContextProvider__
        value={{
          ...dataSourceCtx,
          isUserLoading,
          userAuthToken: token,
          user
        }}
      >
        <WrappedComponent {...props} />
      </PlasmicDataSourceContextProvider__>
    );
  };
  return WithUsePlasmicAuthComponent;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  withUsePlasmicAuth(makeNodeComponent("root")),
  {
    // Helper components rendering sub-elements
    gameFront: makeNodeComponent("gameFront"),
    row: makeNodeComponent("row"),
    menuTab: makeNodeComponent("menuTab"),
    frame78: makeNodeComponent("frame78"),
    frame66: makeNodeComponent("frame66"),
    text9: makeNodeComponent("text9"),
    text10: makeNodeComponent("text10"),
    frame67: makeNodeComponent("frame67"),
    frame39: makeNodeComponent("frame39"),
    filterBtn: makeNodeComponent("filterBtn"),
    text11: makeNodeComponent("text11"),
    icon: makeNodeComponent("icon"),
    filterBtn2: makeNodeComponent("filterBtn2"),
    text12: makeNodeComponent("text12"),
    genres: makeNodeComponent("genres"),
    icon2: makeNodeComponent("icon2"),
    filterBtn3: makeNodeComponent("filterBtn3"),
    text13: makeNodeComponent("text13"),
    genres2: makeNodeComponent("genres2"),
    icon3: makeNodeComponent("icon3"),
    filterBtn4: makeNodeComponent("filterBtn4"),
    text14: makeNodeComponent("text14"),
    genres3: makeNodeComponent("genres3"),
    icon4: makeNodeComponent("icon4"),
    filterBtn5: makeNodeComponent("filterBtn5"),
    text15: makeNodeComponent("text15"),
    genres4: makeNodeComponent("genres4"),
    icon5: makeNodeComponent("icon5"),
    filterBtn6: makeNodeComponent("filterBtn6"),
    text16: makeNodeComponent("text16"),
    genres5: makeNodeComponent("genres5"),
    icon6: makeNodeComponent("icon6"),
    filterBtn7: makeNodeComponent("filterBtn7"),
    text17: makeNodeComponent("text17"),
    genres6: makeNodeComponent("genres6"),
    icon7: makeNodeComponent("icon7"),
    filterBtn8: makeNodeComponent("filterBtn8"),
    text18: makeNodeComponent("text18"),
    genres7: makeNodeComponent("genres7"),
    icon8: makeNodeComponent("icon8"),
    header: makeNodeComponent("header"),
    frame146: makeNodeComponent("frame146"),
    search: makeNodeComponent("search"),
    icon9: makeNodeComponent("icon9"),
    text19: makeNodeComponent("text19"),
    frame79: makeNodeComponent("frame79"),
    buttons: makeNodeComponent("buttons"),
    buttons2: makeNodeComponent("buttons2"),
    text20: makeNodeComponent("text20"),
    avatar: makeNodeComponent("avatar"),
    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
